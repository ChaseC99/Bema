# Where are all the schema files located? globs are supported eg  src/**/*.graphqls
schema:
  - graph/graphql/*.graphqls
  #- graph/*.graphqls

# Where should the generated server code go?
exec:
  filename: graph/generated/generated.go
  package: generated

# Uncomment to enable federation
# federation:
#   filename: graph/generated/federation.go
#   package: generated

# Where should any generated models go?
model:
  filename: graph/model/models_gen.go
  package: model

# Where should the resolver implementations go?
resolver:
  layout: follow-schema
  dir: graph/resolvers
  package: resolvers

# Optional: turn on use ` + "`" + `gqlgen:"fieldName"` + "`" + ` tags in your models
# struct_tag: json

# Optional: turn on to use []Thing instead of []*Thing
# omit_slice_element_pointers: false

# Optional: set to speed up generation time by not performing a final validation pass.
# skip_validation: true

# gqlgen will search for any type names in the schema in these go packages
# if they match it will use them, otherwise it will generate them.
autobind:
#  - "github.com/KA-Challenge-Council/Bema/graph/model"

# This section declares type mapping between the GraphQL and go type systems
#
# The first line in each type will be used as defaults for resolver arguments and
# modelgen, the others will be allowed when binding to fields. Configure them to
# your liking
models:
  ID:
    model:
      - github.com/99designs/gqlgen/graphql.IntID
      - github.com/99designs/gqlgen/graphql.ID
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
  Int:
    model:
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
  Contest:
    fields:
      author:
        resolver: true
      isVotingEnabled:
        resolver: true
      winners:
        resolver: true
  User:
    fields:
      name:
        resolver: true
      email:
        resolver: true
      accountLocked:
        resolver: true
      permissions:
        resolver: true
      isAdmin:
        resolver: true
      lastLogin:
        resolver: true
      notificationsEnabled:
        resolver: true
      assignedGroup:
        resolver: true
  Announcement:
    fields:
      author:
        resolver: true
  Error:
    fields:
      user:
        resolver: true
  Entry:
    fields:
      skillLevel:
        resolver: true
      isFlagged:
        resolver: true
      isDisqualified:
        resolver: true
      isSkillLevelLocked:
        resolver: true
      contest:
        resolver: true
      author:
        resolver: true
      group:
        resolver: true
      averageScore:
        resolver: true
      evaluationCount:
        resolver: true
      voteCount:
        resolver: true
      isVotedByUser:
        resolver: true
      judgeVotes:
        resolver: true
  EntryVote:
    fields:
      user:
        resolver: true
  Contestant:
    fields:
      entries:
        resolver: true
      entryCount:
        resolver: true
      contestCount:
        resolver: true
  Task:
    fields:
      assignedUser:
        resolver: true
  Evaluation:
    fields:
      user:
        resolver: true
      entry:
        resolver: true
  KBSection:
    fields:
      visibility:
        resolver: true
  KBArticle:
    fields:
      section:
        resolver: true
      author:
        resolver: true
      visibility:
        resolver: true
      isPublished:
        resolver: true
      hasDraft:
        resolver: true