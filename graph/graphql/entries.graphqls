extend type Query {
    """
    A list of entries for a given contest
    """
    entries(contestId: ID!): [Entry!]!

    """
    A single entry
    """
    entry(id: ID!): Entry

    """
    A list of flagged entries
    """
    flaggedEntries: [Entry!]! @hasPermission(permission: VIEW_JUDGING_SETTINGS, nullType: EMPTY_ENTRY_ARRAY)

    """
    A list of entries sorted by average score and skill level. If the user is unauthenticated, the entries are sorted by ID instead.
    """
    entriesByAverageScore(contestId: ID!): [Entry!]!

    """
    A breakdown of the number of entries per skill level
    """
    entriesPerLevel(contestId: ID!): [EntriesPerLevel!]!
}

"""
A program submission for a contest
"""
type Entry {
    """
    A unique integer ID
    """
    id: ID!

    """
    The contest for which the entry was submitted
    """
    contest: Contest!

    """
    A URL to the entry program
    """
    url: String!

    """
    The KAID of the entry program
    """
    kaid: String!

    """
    The title of the entry
    """
    title: String!

    """
    The author of the entry
    """
    author: Contestant!

    """
    The skill level assigned to the entry
    """
    skillLevel: String

    """
    The number of votes the entry received on KA
    """
    votes: Int!

    """
    The date the entry program was created
    """
    created: String!

    """
    The height of the entry program canvas
    """
    height: Int!

    """
    Indicates if the entry is a winner of the contest
    """
    isWinner: Boolean!

    """
    The judging group the entry is assigned to
    """
    group: JudgingGroup @isAuthenticated(nullType: NULL)

    """
    Indicates whether the entry has been flagged
    """
    isFlagged: Boolean @isAuthenticated(nullType: NULL)

    """
    Indicates whether the entry has been disqualified
    """
    isDisqualified: Boolean @isAuthenticated(nullType: NULL)

    """
    Indicates whether the skill level has been permanently set for the entry
    """
    isSkillLevelLocked: Boolean @hasPermission(permission: EDIT_ENTRIES, nullType: NULL)

    """
    The average score of the entry
    """
    averageScore: Float @isAuthenticated(nullType: NULL)

    """
    The number of evaluations submitted for the entry
    """
    evaluationCount: Int @isAuthenticated(nullType: NULL)

    """
    The number of judges that voted for this entry
    """
    voteCount: Int @isAuthenticated(nullType: NULL)

    """
    Indicates whether the current user has voted for the entry
    """
    isVotedByUser: Boolean @isAuthenticated(nullType: NULL)

    """
    A list of judge votes for the entry
    """
    judgeVotes: [EntryVote!]! @isAuthenticated(nullType: EMPTY_ENTRY_VOTE_ARRAY)
}

"""
A judge vote submitted for an entry
"""
type EntryVote {
    """
    A unique integer ID
    """
    id: ID!

    """
    The user that voted for the entry
    """
    user: User!

    """
    The reason the user likes the entry
    """
    reason: String!
}

"""
A skill bracket and its respective entry count
"""
type EntriesPerLevel {
    """
    The name of the skill bracket
    """
    level: String!

    """
    The number of entries in the skill bracket
    """
    count: Int!
}